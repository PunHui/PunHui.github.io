<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JSDuck分括号</title>
      <link href="/2022/021112057.html"/>
      <url>/2022/021112057.html</url>
      
        <content type="html"><![CDATA[<p>虽然在 PyCharm 里很方便的就能把括号里的混淆代码挖出来<br>但是我就是懒，偏要写一个自动挖代码的工具</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class=" language-bash"><code class="language-bash"><span class="token string">""</span><span class="token string">"JSFuck 加密将括号里的代码筛选出来"</span><span class="token string">""</span>def jie_xi<span class="token punctuation">(</span><span class="token punctuation">)</span>:    with open<span class="token punctuation">(</span><span class="token string">'你的文件路径'</span>, <span class="token string">'r'</span><span class="token punctuation">)</span> as f:        <span class="token keyword">return</span> f.read<span class="token punctuation">(</span><span class="token punctuation">)</span>JS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>def if_true<span class="token punctuation">(</span>i, b<span class="token punctuation">)</span>:    try:        JS<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> f<span class="token string">"{JS[b]}{i}"</span>    except KeyError:        JS<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> idef if_false<span class="token punctuation">(</span><span class="token punctuation">)</span>:    K <span class="token operator">=</span> 0    <span class="token keyword">for</span> k, <span class="token function">v</span> <span class="token keyword">in</span> JS.items<span class="token punctuation">(</span><span class="token punctuation">)</span>:        K <span class="token operator">=</span> int<span class="token punctuation">(</span>k<span class="token punctuation">)</span>    <span class="token keyword">return</span> K + 1def main<span class="token punctuation">(</span><span class="token punctuation">)</span>:    A <span class="token operator">=</span> 0    B <span class="token operator">=</span> 0    <span class="token keyword">for</span> i <span class="token keyword">in</span> jie_xi<span class="token punctuation">(</span><span class="token punctuation">)</span>:        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">'('</span><span class="token keyword">:</span>            A +<span class="token operator">=</span> 1            if_true<span class="token punctuation">(</span>i, B<span class="token punctuation">)</span>        <span class="token keyword">elif</span> i <span class="token operator">==</span> <span class="token string">')'</span><span class="token keyword">:</span>            A -<span class="token operator">=</span> 1            if_true<span class="token punctuation">(</span>i, B<span class="token punctuation">)</span>            <span class="token keyword">if</span> A <span class="token operator">==</span> 0:                B <span class="token operator">=</span> if_false<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> A <span class="token operator">!=</span> 0:            if_true<span class="token punctuation">(</span>i, B<span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>JS<span class="token punctuation">[</span>17<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/021016107.html"/>
      <url>/2022/021016107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
