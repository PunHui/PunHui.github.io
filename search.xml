<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>GitHub 博客搭建中的异常解决方法</title>
      <link href="/2022/021165054.html"/>
      <url>/2022/021165054.html</url>
      
        <content type="html"><![CDATA[<h2 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h2><p><a href="https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click">推荐b站视频1</a></p><p><a href="https://www.bilibili.com/video/BV1je41147Ma?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click">推荐b站视频2</a> 他的顺序有些乱，完成上面的<br>搭建过程后可以看这个视频搞主题</p><p><a href="https://blog.csdn.net/jspnetcn/article/details/104111651">主题搭建教程，主要看主题！！！</a></p><h2 id="异常解决方法"><a href="#异常解决方法" class="headerlink" title="异常解决方法"></a>异常解决方法</h2><h2 id="主题的一些功能配置"><a href="#主题的一些功能配置" class="headerlink" title="主题的一些功能配置"></a>主题的一些功能配置</h2><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，在 Hexo 根目录下运行命令：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><pre class=" language-bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>prism_plugin:  mode: <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  theme: <span class="token string">'tomorrow'</span>  line_number: <span class="token boolean">false</span>    <span class="token comment" spellcheck="true"># default false</span>  custom_css:</code></pre><p>categories:</p><ul><li>网站搭建</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSDuck分括号</title>
      <link href="/2022/021112057.html"/>
      <url>/2022/021112057.html</url>
      
        <content type="html"><![CDATA[<p>虽然在 PyCharm 里很方便的就能把括号里的混淆代码挖出来<br>但是我就是懒，偏要写一个自动挖代码的工具</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class=" language-bash"><code class="language-bash"><span class="token string">""</span><span class="token string">"JSFuck 加密将括号里的代码筛选出来"</span><span class="token string">""</span>def jie_xi<span class="token punctuation">(</span><span class="token punctuation">)</span>:    with open<span class="token punctuation">(</span><span class="token string">'你的文件路径'</span>, <span class="token string">'r'</span><span class="token punctuation">)</span> as f:        <span class="token keyword">return</span> f.read<span class="token punctuation">(</span><span class="token punctuation">)</span>JS <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>def if_true<span class="token punctuation">(</span>i, b<span class="token punctuation">)</span>:    try:        JS<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> f<span class="token string">"{JS[b]}{i}"</span>    except KeyError:        JS<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> idef if_false<span class="token punctuation">(</span><span class="token punctuation">)</span>:    K <span class="token operator">=</span> 0    <span class="token keyword">for</span> k, <span class="token function">v</span> <span class="token keyword">in</span> JS.items<span class="token punctuation">(</span><span class="token punctuation">)</span>:        K <span class="token operator">=</span> int<span class="token punctuation">(</span>k<span class="token punctuation">)</span>    <span class="token keyword">return</span> K + 1def main<span class="token punctuation">(</span><span class="token punctuation">)</span>:    A <span class="token operator">=</span> 0    B <span class="token operator">=</span> 0    <span class="token keyword">for</span> i <span class="token keyword">in</span> jie_xi<span class="token punctuation">(</span><span class="token punctuation">)</span>:        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">'('</span><span class="token keyword">:</span>            A +<span class="token operator">=</span> 1            if_true<span class="token punctuation">(</span>i, B<span class="token punctuation">)</span>        <span class="token keyword">elif</span> i <span class="token operator">==</span> <span class="token string">')'</span><span class="token keyword">:</span>            A -<span class="token operator">=</span> 1            if_true<span class="token punctuation">(</span>i, B<span class="token punctuation">)</span>            <span class="token keyword">if</span> A <span class="token operator">==</span> 0:                B <span class="token operator">=</span> if_false<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> A <span class="token operator">!=</span> 0:            if_true<span class="token punctuation">(</span>i, B<span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span>print<span class="token punctuation">(</span>JS<span class="token punctuation">[</span>17<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/021016107.html"/>
      <url>/2022/021016107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
